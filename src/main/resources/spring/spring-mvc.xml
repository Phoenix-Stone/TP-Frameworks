<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
       http://www.springframework.org/schema/websocket
       http://www.springframework.org/schema/websocket/spring-websocket.xsd
       http://www.springframework.org/schema/task
	   http://www.springframework.org/schema/task/spring-task-4.0.xsd">
   
   	<!-- task任务扫描注解 -->
	<task:annotation-driven/>
   
    <!--默认的mvc注解映射的支持 -->
	<mvc:annotation-driven />
   	<mvc:resources mapping="/resource/**" location="/resource/" />
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:config/*.properties" ignore-unresolvable="true" />
	
    <aop:aspectj-autoproxy />                        
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="xyz.welog.tpframeworks.controller" />
	
	
	 <!-- 配置一下对json数据的转换 -->
    <mvc:annotation-driven>  
        <mvc:message-converters>  
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <property name="supportedMediaTypes">
            <list>
               <value>text/html;charset=UTF-8</value>
               <value>application/json;charset=UTF-8</value>
           </list>
            </property>  
                <property name="objectMapper">
                <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                    <property name="dateFormat">
                        <bean class="java.text.SimpleDateFormat">
                        <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                        </bean>
                    </property>
                </bean>
                </property>  
            </bean>  
        </mvc:message-converters>  
    </mvc:annotation-driven>
	
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/views/"/>  
        <property name="suffix" value=".html"/>  
        <property name="contentType" value="text/html;charset=utf-8" />
    </bean> 
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
    
    <mvc:interceptors>  
		<mvc:interceptor> 
			<mvc:mapping path="/**" />
			<bean class="xyz.welog.tpframeworks.interceptor.ProtalHandlerInterceptor"></bean>  
		</mvc:interceptor>
    </mvc:interceptors>
    
    <!-- 配置RestTemplate -->
	<!--Http client Factory -->
	<bean id="httpClientFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
		<property name="connectTimeout" value="${restTemplate.connectTimeout}" />
		<property name="readTimeout" value="${restTemplate.readTimeout}" />
	</bean>
	<!--RestTemplate -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="httpClientFactory" />
	</bean>

	<!-- 国际化的消息资源文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:lang/resource*.properties</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<!--加载数据配置文件 -->
	<bean id="systemProperties" class="xyz.welog.tpframeworks.util.SystemProperties" init-method="init">
		<property name="locationFiles">
			<list>
				<value>config/context-param.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 项目初始化时执行 -->
	<!-- <bean id="initDepartMent" class="com.lanswon.service.InitDepartMent"></bean> -->
	
</beans>